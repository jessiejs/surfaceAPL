@import 'https://fonts.googleapis.com/css?family=Inter:400,600,700|Chivo+Mono';
@import './color.scss';

body {
	--gap-small: 5px;
	--gap-medium: 10px;
	--gap-large: 15px;
	--settings-row-height: 50px;

	transition: --gap-small 0.2s, --gap-medium 0.2s, --gap-large 0.2s, --settings-row-height 0.2s;
}

body.compact {
	--gap-small: 3px;
	--gap-medium: 5px;
	--gap-large: 7px;
	--settings-row-height: 35px;
}

@mixin WidgetButtonHover {
	background-color: $accent !important;
}

.selected-button {
	@include WidgetButtonHover;
}

@mixin WidgetButton {
	border-radius: 5px;
	:not(.selected-button):not(img) {
		background-color: $raise !important;
	}
	border: 0 !important;

	transition:
		background-color 0.2s,
		transform 0.2s cubic-bezier(0.68, -0.6, 0.32, 1.6),
		width 0.2s,
		height 0.2s;

	display: flex;
	justify-content: center;
	align-items: center;

	> img {
		height: 80%;
		aspect-ratio: 1 / 1;
		border-radius: 1px;
	}

	> img:not(.accessible) {
		filter: brightness(0.5) contrast(2) brightness(2);
	}

	overflow: hidden;

	aspect-ratio: 1 / 1;

	padding: 0;
}

@mixin WidgetButtonActive {
	transform: scale(0.9);
}

@font-face {
	font-family: Renogare;
	font-weight: bold;
	src: url('/Fonts/Renogare/Renogare-Regular.otf') format('opentype');
}

@mixin BorderView {
	background-color: $border;
	gap: 1px;

	> * {
		background-color: $background;
	}
}

@mixin VBox {
	display: flex;
	flex-direction: column;
	align-items: stretch;
	justify-content: flex-start;

	@include BorderView;
}

@mixin HBox {
	display: flex;
	flex-direction: row;
	align-items: stretch;
	justify-content: flex-start;

	@include BorderView;
}

.app {
	position: fixed;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;

	color: $text;

	font-family: Inter;

	transition: right 0.5s cubic-bezier(0.25, 1, 0.5, 1);

	@include VBox;
}

nav {
	display: flex;
	flex-direction: row;
	align-items: center;
	padding: 12px;
	gap: var(--gap-large);
	font-size: 15px;
	height: 49px;
}

nav > * {
	padding: 0;
	margin: 0;
	color: white;
	font-weight: bold;
	text-decoration: none;
	font-family: 'Inter';
}

main {
	flex-grow: 1;
}

*:first-child {
	margin-top: 0;
}

*:last-child {
	margin-bottom: 0;
}

dialog:not(.custom-dialog)[open] {
	@include VBox;

	> * {
		background-color: $bg-1;
	}
}

dialog:not(.custom-dialog) {
	margin-top: 150px !important;
	border-radius: 15px;
	box-shadow: 0 5px 10px $drop;
	width: 50vw;
	padding: 0;
	border: 1px solid $border;
	overflow: hidden;
	outline: 0 !important;

	font-family: Inter;

	> header {
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: space-between;
		padding: 10px;

		> h1 {
			font-size: 18px;
			padding-left: 8px;
		}

		> * {
			margin: 0;
		}
	}

	> .content {
		padding: 20px;
		display: flex;
		flex-direction: column;
		gap: var(--gap-small);
		align-items: flex-start;

		> .error {
			color: $error;
			font-size: 12px;
		}
		> p {
			white-space: pre-wrap;
		}
	}

	> .content:has(.settings-row) {
		padding: 0;
		gap: 0;
	}

	> .content:not(:has(.qr)) {
		max-height: 300px;
		overflow: hidden auto;
		transition: max-height 1s;
	}

	> .submit-bar {
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: flex-end;
		padding: 10px;
		gap: var(--gap-small);
		background-color: $bg-2;
		border-top: 1px solid $subtle-divider;
	}

	animation: dialogOpen 0.2s;
	transition: margin-top 1s, width 1s;
}

dialog:not(.custom-dialog).pro-size {
	margin-top: 50px !important;
	width: calc(100vw - 100px);
	> .content:not(:has(.qr)) {
		max-height: 90vh;
	}
}

@keyframes dialogOpen {
	from {
		opacity: 0;
		transform: translateY(-10px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes dialogBackdrop {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}

dialog:not(.custom-dialog)::backdrop {
	animation: dialogBackdrop 0.2s;
	background-color: $backdrop;
	backdrop-filter: blur(4px);
}

h1,
h2,
h3,
h4,
h5,
h6 {
	font-family: Renogare;
}

button {
	padding: var(--gap-small) var(--gap-medium);
	border-radius: 5px;
	border: 1px solid $raisedBorder;
	background-color: $raise;
	font-family: Inter;
	cursor: pointer;
}

button:hover {
	background-color: $highlight;
}

button:focus,
input:focus,
textarea:focus,
select:focus,
.select-wrapper:focus {
	background-color: color-mix(in srgb, transparent, $accent 30%);
	border: 1px solid $accent;
	outline: none;
}

label {
	display: flex;
	flex-direction: column;
	font-family: Renogare;
	gap: var(--gap-small);
	font-size: 14px;
	width: 100%;
}

input, select {
	font-size: 14px;
	padding: 6px 12px;
	border-radius: 5px;
	font-family: Inter;
	border: 1px solid $raisedBorder;
	background-color: $drop;
	width: 100%;
}
select {
	cursor: pointer;
}
textarea {
	font-size: 14px;
	padding: 6px 12px;
	border-radius: 5px;
	font-family: Inter;
	border: 1px solid $raisedBorder;
	background-color: $inset;
	width: 100%;
	resize: none;
	height: 150px;
}

.settings-row {
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: space-between;
	width: 100%;
	padding: var(--gap-large) calc(var(--gap-large) * 1.5);
	font-family: 'Inter';
	user-select: none;
	font-size: 15px;

	> input, select {
		max-width: 150px;
	}
	> input[type=checkbox] {
		width: min-content;
	}
	height: var(--settings-row-height);
	border-top: 1px solid $raisedBorder;
}

.settings-row:nth-child(odd) {
	background-color: $bg-2;
}

nav {
	background-color: $bg-3 !important;
}

aside {
	background-color: $bg-1 !important;

	padding: 10px;

	display: flex;
	flex-direction: column;

	gap: var(--gap-small);

	> .row {
		display: flex;
		flex-direction: row;
		gap: var(--gap-small);
		flex-wrap: wrap;
		padding: var(--gap-small);
		border-radius: 10px;
		background-color: $deep-inset;
		width: 335px;

		> .widget {
			width: 50px;
			height: 50px;
		}

		> .widget:has(button) {
			display: grid;
			grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
			gap: var(--gap-small);

			> button {
				width: 100%;
				height: 100%;

				@include WidgetButton;

				> img {
					border-radius: 2.5px;
				}
			}

			> button:hover {
				@include WidgetButtonHover;
			}

			> button:active {
				@include WidgetButtonActive;
			}
		}

		.widget button:nth-child(2) {
			> * {
				transform: rotate(90deg);
			}
		}

		.widget button:nth-child(4) {
			> * {
				transform: rotate(180deg);
			}
		}

		.widget button:nth-child(3) {
			> * {
				transform: rotate(270deg);
			}
		}

		// select only if we don't have children that are buttons
		> .widget:not(:has(button)) {
			@include WidgetButton;
		}

		> .widget:not(:has(button)):hover {
			@include WidgetButtonHover;
		}

		> .widget:not(:has(button)):active {
			@include WidgetButtonActive;
		}
	}
}

* {
	box-sizing: border-box;
}

.primary {
	@include HBox;
	width: 100%;
	max-width: 100%;
}

main {
	overflow: hidden;
}

#canvas {
	flex-grow: 1;
	width: 100% !important;
	height: 100% !important;
	max-width: 100% !important;
}

dialog:not(.custom-dialog):has(.confetti) {
	position: relative;

	.confetti {
		position: absolute;
		left: 0;
		top: 0;
		bottom: 0;
		right: 0;
		width: 100%;
		height: 100%;
		background-color: transparent;
		pointer-events: none;
	}
}

.floatbar {
	position: fixed;
	right: 10px;
	top: 10px;
	bottom: 10px;
	width: 400px;
	border-radius: 5px;
	background-color: $bg-3;
	border: 1px solid $raisedBorder;
	box-shadow: 0 5px 10px rgba(0,0,0,0.4);
	overflow: hidden;

	transition: right 0.5s cubic-bezier(0.25, 1, 0.5, 1), transform 0.5s cubic-bezier(0.25, 1, 0.5, 1);

	padding: var(--gap-large);
	display: flex;
	flex-direction: column;
	gap: var(--gap-medium);

	> header {
		display: flex;
		flex-direction: row;
		align-items: center;
		gap: 7px;
		font-size: 16px;
		font-family: 'Chivo Mono';
		font-weight: lighter;
		text-transform: uppercase;

		padding-bottom: 10px;
		border-bottom: 1px solid $raisedBorder;

		user-select: none;

		> img {
			height: 1.5em;
		}
	}

	> .content {
		flex-grow: 1;
		display: flex;
		flex-direction: column;
		gap: var(--gap-medium);
	}
}

.floatbar.hidden {
	right: -10px;
	transform: translateX(100%);
}

.hue-strip {
	display: flex;
	flex-direction: row;
	gap: 2px;
	align-items: center;
	justify-content: stretch;
}

.hue-strip > * {
	flex-grow: 1;
	aspect-ratio: 1 / 1;
}

.category-row {
	padding-top: 5px;
	padding-bottom: 5px;
	background-color: $background !important;
	> label {
		margin-top: 0;
		margin-bottom: 0;
	}
	height: min-content;
}

.plugin-dialog {
	// Center
	margin-top: 50vh !important;
	transform: translateY(-50%);

	width: calc(100vw - 100px);
	height: calc(100vh - 100px);
	border: 0;

	color: white;
	background-color: $bg-3;

	border-radius: 10px;
	padding: 0;

	display: flex;
	flex-direction: row;
	justify-content: stretch;
	align-items: stretch;

	> * {
		flex-grow: 1;
	}

	&>main {
		padding: 50px;
		font-family: 'Inter';

		display: flex;
		flex-direction: column;
		gap: 10px;

		&>h1, &>p {
			margin: 0;
		}

		&>.spacer {
			flex-grow: 1;
		}

		&>.buttons {
			display: flex;
			flex-direction: row;
			gap: 5px;
			align-items: center;
			justify-content: flex-end;
			padding: 0;

			&>button {
				padding: 10px 20px;
				margin: 0;
				width: min-content;

				&.primary {
					background-color: var(--accent);
					border: 0;
				}
			}
		}
	}

	&>.image {
		background-color: var(--accent);

		display: flex;

		align-items: center;
		justify-content: center;

		min-width: 400px;

		border-radius: 10px;

		&>img {
			width: 25%;
			user-select: none;
			&.spinning {
				animation: spin 1s ease-in-out infinite;
			}
		}
	}

	&::backdrop {
		background-color: rgba(21, 15, 26, 0.9);
		backdrop-filter: blur(50px);
	}

	box-shadow: 0 15px 20px rgba(0,0,0,0.2);
}

@keyframes spin {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}
